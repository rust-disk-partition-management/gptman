name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install stable --profile minimal --no-self-update \
              --target x86_64-unknown-linux-musl
          rustup default stable
          echo "Installed:"
          cargo --version
          rustc --version --verbose
      - name: Build release (Linux)
        run: cargo build --release --all-features --target x86_64-unknown-linux-musl
      - run: strip target/x86_64-unknown-linux-musl/release/gptman
      - uses: actions/upload-artifact@v3
        with:
          name: binary-linux
          path: target/x86_64-unknown-linux-musl/release/gptman

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install toolchain
        shell: bash
        run: |
          rustup toolchain install stable --profile minimal --no-self-update \
              --target x86_64-pc-windows-msvc
          rustup default stable
          echo "Installed:"
          cargo --version
          rustc --version --verbose
      - name: Build release (Windows)
        run: cargo build --release --all-features --target=x86_64-pc-windows-msvc
      - uses: actions/upload-artifact@v3
        with:
          name: binary-windows
          path: target/x86_64-pc-windows-msvc/release/gptman.exe

  build-osx-x86:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup toolchain install stable --profile minimal --no-self-update
          rustup default stable
          echo "Installed:"
          cargo --version
          rustc --version --verbose
      - name: Build release (OSX)
        run: cargo build --release --all-features
      - uses: actions/upload-artifact@v3
        with:
          name: binary-osx
          path: target/release/gptman

  release:
    needs: [build-linux, build-windows, build-osx-x86]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binary-linux
          path: binary-linux
      - uses: actions/download-artifact@v3
        with:
          name: binary-windows
          path: binary-windows
      - uses: actions/download-artifact@v3
        with:
          name: binary-osx
          path: binary-osx
      - name: Arrange artifacts
        run: |
          mkdir artifacts
          mv binary-linux/gptman "artifacts/gptman-${{ github.ref_name }}-linux-x86_64"
          mv binary-windows/gptman.exe "artifacts/gptman-${{ github.ref_name }}-win-x86_64.exe"
          mv binary-osx/gptman "artifacts/gptman-${{ github.ref_name }}-osx-x86_64"
      - uses: ncipollo/release-action@v1
        with:
          artifactErrorsFailBuild: true
          artifacts: "artifacts/*"
          body: gptman release ${{ github.ref_name }}
          makeLatest: true
          name: Release ${{ github.ref_name }}
